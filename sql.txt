select * from employees
select * from departments

/* SELECT QUERIES */

SELECT DEPARTMENT_ID, MANAGER_ID 
FROM DEPARTMENTS

SELECT last_name, salary, salary*0.15+2000
FROM employees

SELECT last_name, salary, (salary+2000)*0.15 AS Bonus
FROM employees

SELECT last_name as lname, salary as sal, (salary+2000)*0.15  "Bonus salary"
FROM employees

/* SELECT COMMAND SHOULD BE ALWAYS FOLLOWED BY A FROM COMMAND */

SELECT SYSDATE FROM DUAL
DESCRIBE DUAL

SELECT 100*88 FROM DUAL

/* NULL VALUES */

SELECT LAST_NAME, SALARY, COMMISSION_PCT, 12+SALARY+COMMISSION_PCT
FROM EMPLOYEES

SELECT LAST_NAME || JOB_ID "EMP DETAILS"
FROM EMPLOYEES

/* Date and character literals must be enclosed within single quotes */

SELECT LAST_NAME || ' is a '|| JOB_ID "EMP DETAILS"
FROM EMPLOYEES

SELECT DEPARTMENT_NAME || q'[ department's manager id is ]' || MANAGER_ID
FROM DEPARTMENTS

SELECT DEPARTMENT_ID
FROM EMPLOYEES

SELECT DISTINCT DEPARTMENT_ID
FROM EMPLOYEES

DESCRIBE EMPLOYEES

/* ACTIVITY 1 

Query the JOBS table and return a single expression of the form The Job Id for the <job_title’s> job is: <job_id>. 
Take note that the job_title should have an apostrophe and an “s” appended to it to read more naturally. 
A sample of this output for the organization president is: 
“The Job Id for the President’s job is: AD_PRES.” Alias this column expression as “Job Description” using the AS keyword. */

SELECT * FROM JOBS

/* RESTRICT DATA */

/* WHERE */
/* = <= BETWEEN LIKE NULL IN 
AND OR NOT */

SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES WHERE DEPARTMENT_ID=90

*/ FROM , WHERE, SELECT, ORDER BY*/

SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES WHERE DEPARTMENT_ID=90
ORDER BY SALARY DESC

SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES WHERE LAST_NAME ='King'

SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES WHERE SALARY>4000

SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES WHERE SALARY BETWEEN 10000 AND 20000

SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES WHERE SALARY>= 10000 AND SALARY <=20000

SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES WHERE SALARY>= 10000 AND DEPARTMENT_ID = 90

SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES WHERE SALARY>= 10000 AND DEPARTMENT_ID IN (90,60,100)

SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES 
WHERE SALARY NOT BETWEEN 10000 AND 20000

SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'A%'

SELECT FIRST_NAME, LAST_NAME
FROM EMPLOYEES
WHERE FIRST_NAME LIKE '_l%'

SELECT FIRST_NAME, LAST_NAME, DEPARTMENT_ID, MANAGER_ID
FROM EMPLOYEES
WHERE MANAGER_ID IS NULL

SELECT FIRST_NAME, LAST_NAME, JOB_ID, COMMISSION_PCT
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL

/* OPERATOR PRECEDENCE FOR WHERE CLAUSE  */
/* CONCATENATION, COMPARISON, LOGICAL */

/* ORDER BY 
ALPHABETICAL ORDER, LOWEST TO HIGHEST (NUMERIC, DATE), NULL VALUES AT THE LAST ORDER */

SELECT FIRST_NAME, LAST_NAME, JOB_ID, COMMISSION_PCT
FROM EMPLOYEES
ORDER BY COMMISSION_PCT DESC

/* SUBSTITUTION */

SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES WHERE MANAGER_ID= &MANAGER_ID

SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES WHERE DEPARTMENT_ID= &&DEPARTMENT_ID

/* USE SINGLE QUOTES FOR PASSING DATE OR CHARACTER AS INPUT */
SELECT LAST_NAME, JOB_ID, DEPARTMENT_ID, SALARY
FROM EMPLOYEES 
WHERE JOB_ID= '&HELLO'

/* DEFINE, VERIFY ALONG WITH SUBSTITUTION VARIABLES 
2)	Write a query that extracts the JOB_TITLE, MIN_SALARY, and MAX_SALARY columns, as well as an expression called VARIANCE, 
which is the difference between the MAX_SALARY and MIN_SALARY values, for each row. 
The result should include only JOB_TITLE values that contain either the word “President” or “Manager.” 
Sort the list in descending order based on the VARIANCE expression. 
If more than one row has the same VARIANCE value, then, sort these rows by JOB_TITLE in reverse alphabetic order. */

/* SCALAR FUNCTIONS */

SELECT EMPLOYEE_ID, LAST_NAME, DEPARTMENT_ID
FROM EMPLOYEES
WHERE LOWER(LAST_NAME) = 'king'

SELECT EMPLOYEE_ID, CONCAT(FIRST_NAME, LAST_NAME) "FNAME",
JOB_ID, LENGTH(LAST_NAME), INSTR(LAST_NAME,'a') "CONTAINS 'a'?"
FROM EMPLOYEES
WHERE SUBSTR(JOB_ID,4) = 'REP'

SELECT SUBSTR('HI WORLD',4,6)FROM DUAL

SELECT 100+34 FROM DUAL

DESCRIBE DUAL
SELECT * FROM DUAL

SELECT LAST_NAME, SALARY, JOB_ID
FROM EMPLOYEES
ORDER BY SALARY DESC, JOB_ID

SELECT ROUND(101.4657,2) FROM DUAL
SELECT MOD(107,45) FROM DUAL

/* RR format */
/* YY format */

/* 18-June-19
19-May-78 */

/* 0-49 --> CURRENT CENTURY, 50-99 , LAST CENTURY

DD-MM-RR

1998   05-APR-98 1998  1998
1998   05-APR-22 2022  1921

2018   05-APR-18 2018  2018 
2018   05-APR-98 1998  2098 */

15-09-2022

22 --> RR --> 2022
78 --> RR --> 1978
22 --> YY --> 2022
78 --> YY --> 2078

SELECT LAST_NAME, ROUND((SYSDATE-HIRE_DATE)/7,2) AS NUM_WEEKS
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 60

/* NVL, NVL2, COALESCE, NULLIF */
/* CASE, DECODE */

/* 
3)	Write a Query that displays the employee number, hire date, number of months employed, six-month review date, 
first Friday after hire date, and the last day of the hire month for all employees who have been employed 
for fewer than 150 months and working for department 50 */


/* GROUP FUNCTIONS */

/* AVG, COUNT, SUM, MIN, MAX, DISTINCT
GROUP BY, HAVING */

SELECT ROUND(AVG(SALARY),2), MAX(SALARY), MIN(SALARY)
FROM EMPLOYEES

SELECT ROUND(AVG(SALARY),2), MAX(SALARY), MIN(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 100

SELECT COUNT(*)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90

SELECT DEPARTMENT_ID, ROUND(AVG(SALARY),2), MAX(SALARY), MIN(SALARY)
FROM EMPLOYEES
GROUP BY(DEPARTMENT_ID)

/* FROM, WHERE , GROUP BY, SELECT, ORDER BY */

SELECT DEPARTMENT_ID, ROUND(AVG(SALARY),2), MAX(SALARY), MIN(SALARY)
FROM EMPLOYEES
GROUP BY(DEPARTMENT_ID)

/* WHILE USING GROUP FUNCTION, THE COLUMNS SELECTED SHOULD BE EITHER A GROUP FUNCTION OR
INCLUDED IN THE GROUP BY CLAUSE */

SELECT DEPARTMENT_ID, COUNT(LAST_NAME) 
FROM EMPLOYEES
GROUP BY(DEPARTMENT_ID)

SELECT ROUND(AVG(SALARY),2), COUNT(LAST_NAME) 
FROM EMPLOYEES
GROUP BY(DEPARTMENT_ID)

/* TO RESTRICT GROUPED ROWS, HAVING SHOULD BE USED */

SELECT DEPARTMENT_ID, ROUND(AVG(SALARY),2), AVG(SALARY)*10 AS CALC
FROM EMPLOYEES
GROUP BY(DEPARTMENT_ID)
HAVING AVG(SALARY)*10 >10000

SELECT MAX(AVG(SALARY))
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID

/* JOINS */

/* NATURAL JOINS, OUTER JOINS, CARTESIAN PRODUCT
   USING, ON */
   
SELECT * FROM DEPARTMENTS
SELECT * FROM LOCATIONS
SELECT * FROM EMPLOYEES

SELECT DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID, CITY
FROM DEPARTMENTS
NATURAL JOIN LOCATIONS

SELECT DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID, CITY
FROM DEPARTMENTS
NATURAL JOIN LOCATIONS
WHERE DEPARTMENT_ID IN(60,100,180)

SELECT EMPLOYEE_ID, LAST_NAME, LOCATION_ID, DEPARTMENT_ID
FROM EMPLOYEES
JOIN DEPARTMENTS
USING (DEPARTMENT_ID)

SELECT EMPLOYEE_ID, LAST_NAME, LOCATION_ID, DEPARTMENT_ID
FROM EMPLOYEES
JOIN DEPARTMENTS
USING (DEPARTMENT_ID)

/* IF A COLUMN NAME IS SAME IN BOTH TABLES AND NOT BEING USED IN THE USING CLAUSE, ALIAS IT */

SELECT EMPLOYEE_ID, LAST_NAME, LOCATION_ID,D.MANAGER_ID, DEPARTMENT_ID
FROM EMPLOYEES E
JOIN DEPARTMENTS D
USING (DEPARTMENT_ID)

SELECT L.CITY, D.DEPARTMENT_NAME
FROM LOCATIONS L JOIN DEPARTMENTS D
USING(LOCATION_ID)
WHERE D.LOCATION_ID = 1400

/* DO NOT QUALIFY THE COLUMN USED IN THE USING CLAUSE */

SELECT L.CITY, D.DEPARTMENT_NAME
FROM LOCATIONS L JOIN DEPARTMENTS D
USING(LOCATION_ID)
WHERE LOCATION_ID = 1400

/* ON CLAUSE */

/* CAN   BE USED TO JOIN TABLES WITH DIFFERENT COLUMN NAMES
MORE THAN ONE TABLE
COLUMN ALIASING IS REQUIRED */

SELECT E.EMPLOYEE_ID, E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_ID, D.LOCATION_ID
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID)

SELECT * FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE D.DEPARTMENT_ID IN (90,100,60) OR E.JOB_ID = 'SA_REP'

SELECT * FROM EMPLOYEES, DEPARTMENTS 
WHERE EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID

SELECT * FROM EMPLOYEES JOIN DEPARTMENTS 
WHERE EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID

SELECT EMPLOYEE_ID, CITY, DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
JOIN LOCATIONS L
ON D.LOCATION_ID = L.LOCATION_ID

/* CROSS JOINS */

/* OUTER JOINS */

SELECT LAST_NAME, D.DEPARTMENT_ID, DEPARTMENT_NAME
FROM EMPLOYEES E
LEFT OUTER JOIN 
DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID)

SELECT LAST_NAME, D.DEPARTMENT_ID, DEPARTMENT_NAME
FROM EMPLOYEES E
RIGHT OUTER JOIN 
DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID)

SELECT LAST_NAME, D.DEPARTMENT_ID, DEPARTMENT_NAME
FROM EMPLOYEES E
FULL OUTER JOIN 
DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID)









